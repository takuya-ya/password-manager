#!/bin/bash

declare -a user_inputs=("service_name" "user_name" "password")
declare -a input_errors=(
    '\033[31mサービス名が入力されていません\033[0m'
    '\033[31mユーザー名が入力されていません\033[0m'
    '\033[31mパスワードが入力されていません\033[0m'
)
declare -a length_errors=(
    '\033[31mサービス名は50文字以内で入力してください\033[0m'
    '\033[31mユーザー名は50文字以内で入力してください\033[0m'
    '\033[31mパスワードは50文字以内で入力してください\033[0m'
)
declare -a error_messages=()

# 未入力項目と文字数超過を確認し、該当するエラーメッセージを配列に追加
validation_user_inputs()
{
    MAX_CAHRACTERS=50
    # user_inputsのインデントをindentとしてループし、ユーザー入力情報とエラー文を紐づける
    for indent in "${!user_inputs[@]}"; do
        if [ -z "${user_inputs[$indent]}" ]; then
            error_messages+=("${input_errors[$indent]}")
        elif [ "${#user_inputs[$indent]}" -ge "$MAX_CAHRACTERS" ]; then
            error_messages+=("${length_errors[$indent]}")
        fi
    done
}

echo 'パスワードマネージャーへようこそ！'
read -p 'サービス名を入力して下さい：' user_inputs[0]
read -p 'ユーザー名を入力して下さい：' user_inputs[1]
read -p 'パスワードを入力して下さい：' user_inputs[2]

validation_user_inputs

if [ -z "$error_messages" ]; then
    # エラーが無い場合、ファイルにリダイレクトして、感謝文を出力
    (echo "${user_inputs[0]}":"${user_inputs[1]}":"${user_inputs[2]}" >> user_inputs) 2>> error.txt

    if [ $? -ne 0 ]; then
        printf '\033[31m入力内容の保存に失敗しました\033[0m\n'
        return
    fi

    echo -e "Thank you\033[31m!\033[0m"
else
    # エラーがある場合、配列のエラー文を出力
    for error in "${error_messages[@]}"; do
        echo -e $error
    done
fi
